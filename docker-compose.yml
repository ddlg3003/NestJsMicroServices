version: "3.9"

services:
  mongodb:
    image: mongo:latest
    environment:
      - MONGODB_DATABASE="todo_db"
    ports:
      - 27017:27017
  rabbitmq3:
    container_name: "rabbitmq"
    image: rabbitmq:3.10-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=dan
      - RABBITMQ_DEFAULT_PASS=dan123
    ports:
      - '5672:5672'
      - '15672:15672'
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.1
    container_name: elastic
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01
      - cluster.initial_master_nodes=es01
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - ELASTIC_PASSWORD=dan123
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
  cache:
    container_name: redis
    image: redis:7.0-alpine
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass dan303
    volumes: 
      - cache:/data
  todo: 
    container_name: todo-api
    image: todo:latest
    ports:
      - "3003:3003"
    restart: on-failure
    environment:
      - MONGO_URI=mongodb://mongodb:27017/todo_db
      - ELASTICSEARCH_NODE=http://es01:9200
      - RABBITMQ_URI=amqp://dan:dan123@rabbitmq3:5672
      - REDIS_HOST=cache
    depends_on:
      - mongodb
      - es01
      - cache
      - rabbitmq3
  worker: 
    container_name: worker
    image: worker:latest
    ports:
      - "3004:3004"
    restart: on-failure
    environment:
      - ELASTICSEARCH_NODE=http://es01:9200
      - RABBITMQ_URI=amqp://dan:dan123@rabbitmq3:5672
    depends_on:
      - mongodb
      - es01
      - cache
      - rabbitmq3
      - todo
volumes:
  cache:
    driver: local
  data01: {} 